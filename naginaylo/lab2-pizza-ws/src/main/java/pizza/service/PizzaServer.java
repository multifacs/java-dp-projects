
package pizza.service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PizzaServer", targetNamespace = "http://server.pizza/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PizzaServer {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStatus", targetNamespace = "http://server.pizza/", className = "pizza.service.GetStatus")
    @ResponseWrapper(localName = "getStatusResponse", targetNamespace = "http://server.pizza/", className = "pizza.service.GetStatusResponse")
    @Action(input = "http://server.pizza/PizzaServer/getStatusRequest", output = "http://server.pizza/PizzaServer/getStatusResponse")
    public String getStatus(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "changeStatus", targetNamespace = "http://server.pizza/", className = "pizza.service.ChangeStatus")
    @ResponseWrapper(localName = "changeStatusResponse", targetNamespace = "http://server.pizza/", className = "pizza.service.ChangeStatusResponse")
    @Action(input = "http://server.pizza/PizzaServer/changeStatusRequest", output = "http://server.pizza/PizzaServer/changeStatusResponse")
    public void changeStatus(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "removePizza", targetNamespace = "http://server.pizza/", className = "pizza.service.RemovePizza")
    @ResponseWrapper(localName = "removePizzaResponse", targetNamespace = "http://server.pizza/", className = "pizza.service.RemovePizzaResponse")
    @Action(input = "http://server.pizza/PizzaServer/removePizzaRequest", output = "http://server.pizza/PizzaServer/removePizzaResponse")
    public void removePizza(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "orderPizza", targetNamespace = "http://server.pizza/", className = "pizza.service.OrderPizza")
    @ResponseWrapper(localName = "orderPizzaResponse", targetNamespace = "http://server.pizza/", className = "pizza.service.OrderPizzaResponse")
    @Action(input = "http://server.pizza/PizzaServer/orderPizzaRequest", output = "http://server.pizza/PizzaServer/orderPizzaResponse")
    public String orderPizza(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPizza", targetNamespace = "http://server.pizza/", className = "pizza.service.AddPizza")
    @ResponseWrapper(localName = "addPizzaResponse", targetNamespace = "http://server.pizza/", className = "pizza.service.AddPizzaResponse")
    @Action(input = "http://server.pizza/PizzaServer/addPizzaRequest", output = "http://server.pizza/PizzaServer/addPizzaResponse")
    public int addPizza(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPizzas", targetNamespace = "http://server.pizza/", className = "pizza.service.GetPizzas")
    @ResponseWrapper(localName = "getPizzasResponse", targetNamespace = "http://server.pizza/", className = "pizza.service.GetPizzasResponse")
    @Action(input = "http://server.pizza/PizzaServer/getPizzasRequest", output = "http://server.pizza/PizzaServer/getPizzasResponse")
    public String getPizzas();

}
